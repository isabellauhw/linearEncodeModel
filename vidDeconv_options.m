function options = vidDeconv_options
    % *vidDeconv_options*: Sets all options for the analysis of neuromodulators (DA/ ACh)
    % from the instrumental task in the vidDeconv (video deconvolution) study.
    % 
    % OUT:
    % options - the struct that holds all analysis options

%%%% --- General Set-Up ---
addpath(genpath('./utils'));
addpath(genpath('./external'));
addpath(genpath('./main'));
addpath(genpath('./data'));

%%% --- ENTER YOUR PATHS HERE ---
% This is where we are now (where the code is to be found):
options.codeDir = fileparts(mfilename('fullpath'));

% This is the base root for both raw data and analysis:
options.mainDir = '/Users/heiwinglau/Documents/Research/DPhil/rotation/lak/';

% options.rawDir = fullfile(options.mainDir, 'rawData');
options.rawDir = fullfile(options.mainDir, 'data');
options.workDir = fullfile(options.mainDir, 'analysis');

options.vidDataRoot = '/Volumes/Data/'; % Please change it accordingly - window system has another configuration
options.bhvDataRoot = '/Users/heiwinglau/Documents/Research/DPhil/rotation/lak/deconvolGlm/linearEncodeModel/data/behav'; % Please change it accordingly
options.neuralDataRoot = '/Users/heiwinglau/Documents/Research/DPhil/rotation/lak/deconvolGlm/linearEncodeModel/data/neural'; % Please change it accordingly 

% Data file name definition
options.bhvFileExtension = '_behav_probability_sessions.csv';
options.neuralFileExtension = '_fluor_timeseries_probability_sessions.csv';

%%%--- Animal IDs -------------------------------------------------%%%
% Archived options
% options.subjectIDs = ['AMR035', 'MFE008', 'MFE015', 'MFE018', 'MFE029', 'MFE030', 'MFE033', 'MFE035', 'MFE036']; 
% options.dataReview.subjectIDs = ['AMR035', 'MFE008', 'MFE015', 'MFE018', 'MFE029', 'MFE030', 'MFE033', 'MFE035', 'MFE036'];

options.animal = ['MFE008']; 

%-- beta kernel config --------------------------------------------------%
options.sRate = 20;  % Hz
options.preTime = 0.5; % time before the onset of an event that is included in the time kernel
options.postTime = 2; % (I put it as 3 for now) time after the onset of an event that is included in the time kernel

%-- Linear Encoding Model Variable Definitions --------------------------------------------------%
options.variableDefs = struct( ...
  'stimulus', struct( ...
      'type', 'event', ...
      'timeRef', 'stimulusOnsetTime', ...
      'vars', {{ ...
          'stimContrast0', 'stimContrastR00625', 'stimContrastL00625', ...
          'stimContrastR0125', 'stimContrastL0125', ...
          'stimContrastR025', 'stimContrastL025', ...
          'stimContrastR05', 'stimContrastL05', ...
          'stimContrastR1', 'stimContrastL1' ...
      }} ...
  ), ...
  'reward', struct( ...
      'type', 'event', ...
      'timeRef', 'outcomeTime', ...
      'vars', {{ ...
          'rewardR0', 'rewardL0', ...
          'rewardR00625', 'rewardL00625', ...
          'rewardR0125', 'rewardL0125', ...
          'rewardR025', 'rewardL025', ...
          'rewardR05', 'rewardL05', ...
          'rewardR1', 'rewardL1'...
      }} ...
  ), ...
  'choice', struct( ...
      'type', 'event', ...
      'timeRef', 'choiceStartTime', ...
      'vars', {{'choiceR', 'choiceL'}} ...
  ), ...
  'neural', struct( ...
      'type', 'neural', ...
      'timeRef', {{'LeftDLS_DA', 'RightDLS_ACH'}} ...
  ), ...
  'vid', struct( ...
      'type', 'continuous', ...
      'timeRef', {{'eventTimes'}}, ...
      'vars', {{'MovementPC', 'MotionPC'}} ...
  ), ...
   'keypoint', struct( ...
      'type', 'continuous', ...
      'timeRef', {{'eventTimes'}}, ...
      'vars', {{'mouth_x', 'mouth_y', 'lowerlip_x', 'lowerlip_y'}} ...
  ), ...
   'vidAvg', struct( ...
      'type', 'trial', ...
      'timeRef', {{'NaN'}}, ...
      'vars', {{'MovementPC', 'MotionPC'}} ...
  ), ... 
  'choiceHistorytAvg', struct( ...
      'type', 'trial', ...
      'timeRef', {{'NaN'}}, ...
      'vars', {{'choiceHistory'}} ...
  ) ...
);

end